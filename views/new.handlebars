
<h1> Hi! - Lets test a new transaction</h1>
<p>Make a test payment with Braintree using a credit card</p>


<form action="/checkouts" id="my-sample-form" method="post">
    <label class="hosted-fields--label" for="customer">Customer Name</label>
    <input class="hosted-field" type="text" name="customer">

    <label class="hosted-fields--label"  for="amount">Amount</label>
    <input class="hosted-field" type="tel" name="amount" min="1">

    <label class="hosted-fields--label"  for="card-number">Card Number</label>
    <div class="hosted-field " id="card-number"></div>

    <label class="hosted-fields--label"  for="cvv">CVV</label>
    <div class="hosted-field " id="cvv"></div>

    <label class="hosted-fields--label" for="expiration-date">Expiration Date</label>
    <div class="hosted-field " id="expiration-date"></div>

    <input type="hidden" id="nonce" name="payment_method_nonce">

    <div class="error-area" id="client-error-area"> 
        {{#if messages}}
            ERRORS: {{messages}}
        {{/if}}
    </div>

    <div class=".button-container">
            <input class="button button--green button--green:hover button--small"type="submit" value="Pay" />
    </div>
</form>

    <script src="https://js.braintreegateway.com/web/3.34.0/js/client.min.js"></script>
    <script src="https://js.braintreegateway.com/web/3.34.0/js/hosted-fields.min.js"></script>
    <script>
      var form = document.querySelector('#my-sample-form');
      var submit = document.querySelector('input[type="submit"]');

      console.log('{{clientToken}}')

      braintree.client.create({
        authorization: '{{clientToken}}'
      }, function (clientErr, clientInstance) {
        if (clientErr) {
          console.error(clientErr);
          return;
        }

        braintree.hostedFields.create({
          client: clientInstance,
          styles: {
            'input': {
              'font-size': '14px'
            },
            'input.invalid': {
              'color': 'red'
            },
            'input.valid': {
              'color': 'green'
            }
          },
          fields: {
            number: {
              selector: '#card-number',
              placeholder: '4111 1111 1111 1111'
            },
            cvv: {
              selector: '#cvv',
              placeholder: '123'
            },
            expirationDate: {
              selector: '#expiration-date',
              placeholder: '10/2019'
            }
          }
        }, function (hostedFieldsErr, hostedFieldsInstance) {
          if (hostedFieldsErr) {
            console.error(hostedFieldsErr);
            return;
          }

          submit.removeAttribute('disabled');

          form.addEventListener('submit', function (event) {
            event.preventDefault();
            document.getElementById("client-error-area").innerHTML = "";


            hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
              if (tokenizeErr) {
                document.getElementById("client-error-area").innerHTML = "ERRORS:" + tokenizeErr.message;
                return;
              }

              document.querySelector('#nonce').value = payload.nonce;
              form.submit();

            });
          }, false);
        });
      });
    </script>

